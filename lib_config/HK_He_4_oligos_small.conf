# DropSynth library config file
# v 0.1
# 09/21/2021

#############################################################
[lib_specific]
# read table for each codon which other codon encodes same aa but is most distant
# based on info from https://www.kazusa.or.jp/codon/
# for E. coli use: codon_data/ecoli-codon-usage.txt
# for Human use: codon_data/human-codon-usage.txt
codon_usage_file = codon_data/ecoli-codon-usage.txt

#output file
output_file_names = HK4_He_out_small.fasta
output_folder = db_oligo

#is the input AA or DNA
#if input is DNA, it will attempt to split and assemble seq as is
input_type = AA

#the source files with all sequences split by number of oligos required
input_file = fasta_input/HK_2TM_1EC_HAMP_4oligo_wpos_HAMPend_small.fasta

# number of oligos to use to split genes for this input file:
num_oligos = 4

#add a stop codon before KpnI?
add_stop_codon = False

seeds_for_libs = 6784394785643782

#this is a list of all seq IDs which don't work
IDs_to_remove = db/IDs_to_remove_HK4_He_small.csv

#what site to append to start of gene
cloning_fwd = GGTCTCACAT

#if this is false not atg will be added
clonging_fwd_includes_ATG = True

#
check_starting_ATG = True

#what site to append to end of gene (top strand seq)
cloning_rev = GACGTGAGACC

# restriction enzyme definition file in the REsites folder
REsites_file = sites.csv

#############################################################
[second_lib]
#generate two different codon optimizations for each protein?
gen_two_codon = True

#lookup table to use to convert codons
furthest_codon_file = codon_data/furthest_codon_pairs.json

#should different barcodes be used for the same protein in the second library
#this can mitigate bead effects
switch_barcodes_for_second_lib = True

#############################################################
[general_settings]

# total oligo length to synth for this lib
total_oligo_length = 300

#how much of the oligo is needed for processing (non-payload)
seq_req_for_processing = 70

#maximum tries to split each gene (default 100):
max_num_attempts = 4

#use padding (add random sequence between final KpnI site and the reverse assembly primer)
#this makes gel isolation easier since the distribution of lengths is reduced
padding_var = True

#padding lengths for given number of oligos
#sequences with lengths below this will get padding
#these numbers are for 300mer oligos
padding_length = 1: 270, 2: 370, 3: 580, 4: 790, 5: 1000, 6: 1210, 7: 1420, 8: 1630
    
#block any homopolymer repeats of this length or longer:
max_homopolymer_repeat_length = 8

#asmF primer file (only primer 504 used)
#DO NOT USE skpp20-511 this is used in the anchor oligo!
#Primers for alternate codon versions are offset by len(num_oligos) = 15
assemblyprimf_file = asmprimers-skpp20/asmF_selected_mod504.fasta

#enter the reverse primers (only primer 504 used)
#Primers for alternate codon versions are offset by len(num_oligos) = 15
assemblyprimr_file = asmprimers-skpp20/asmR_selected_mod504.fasta

#use different assembly primers for the codon2 lib
diff_assembly_pim_on_two_codon = False

#codon2 forward assembly primer file
assemblyprimf_file_codon2 = n/a

#codon2 reverse assembly primer file
assemblyprimr_file_codon2 = n/a

#############################################################
[Primerselectiontools_settings]

#seq, oligosizemax, lengthleeway, positionleeway, avgoverlapsize, overlaptemps, deltaGThreshold, selfDimersThreshold, num_of_oligos
#oligos = Primerselectiontools_py3.optimizedSplit(finalrecwithAssPrimers.seq,max_payload_length,15,15,20,[58,62],-4,4,num_oligos)

lengthleeway = 15

positionleeway = 15

avgoverlapsize = 20

overlaptemps = 58,62

deltaGThreshold = -4

selfDimersThreshold = 4

#############################################################
[DS_Lib_settings]

oligo_input_file = HK4_He_out_small.oligos

#the spkk15 primer files FWD and REV
ampprimf_file = ampprimers-skpp15/skpp15-forward.faa
ampprimr_file = ampprimers-skpp15/skpp15-reverse.faa

#which skpp15 pairs to use, in order
primers_to_use = 9, 13

constructs_per_lib = 1536

#barcode set, which set of bead barcodes to use?
#for 384 use:
# filt_prim_12nt_Lev_3_Tm_40_42_GC_45_55_SD_2_mod_restriction.fasta
#for 1536 use:
# filt_prim_12nt_Lev_3_Tm_38_44_GC_45_55_SD_2.fasta
barcode_set = filt_prim_12nt_Lev_3_Tm_38_44_GC_45_55_SD_2_trim.fasta

#length of payload + BtsaI sites + buffer such that all oligos are full length
# 142nt for 200mer with 12nt BC, 
# 172nt for 230mers
# 242nt for 300mers
length_padded_payload = 242

#############################################################
[Lib_splitting]

#does this library need to be split?
needs_split = Flase

#where to put the output files
output_location = db_libs

#this is useful for balancing out the sizes of the libraries
#this should be (total number of recs - req. seqs #)/num libs + req. seqs #
div_lib_size = 1012

#how many smaller libs to split the input into
number_of_libs = 2

#force these seqs to be in each library
#file can be fasta or csv
seqs_to_require_file = controls_input/blactam_controls_4_dups.fasta